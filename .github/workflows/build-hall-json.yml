name: Build Hall JSON
permissions:
  contents: write
on:
  workflow_dispatch: {}   # manual only (safe)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Convert Hall.csv -> hall_properties.json
        shell: pwsh
        run: |
          $in  = Test-Path ./Hall.csv
          if (-not $in) { throw "Hall.csv not found at repo root. Upload it first." }

          $rows = Import-Csv ./Hall.csv

          # Map columns -> JSON fields. Adjust the left side to match your CSV headers exactly.
          $out = foreach ($r in $rows) {
            # Try to read flexible header names. Edit these if your CSV differs.
            $name   = $r.Name         ?? $r.Property ?? $r.Title
            $type   = $r.Type         ?? $r.PropertyType
            $units  = $r.Units
            $addr   = $r.Address
            $city   = $r.City
            $state  = $r.State        ?? $r.ST
            $zip    = $r.Zip          ?? $r.ZIP
            $owner  = $r.Owner
            $manager= $r.Manager
            $email  = $r.ManagerEmail ?? $r.Email
            $rvp    = $r.RVP
            $rpm    = $r.RPM
            $lat    = $r.Latitude
            $lng    = $r.Longitude

            if ([string]::IsNullOrWhiteSpace($name)) { continue }
            if (-not [double]::TryParse("$lat",[ref]([double]$null))) { continue }
            if (-not [double]::TryParse("$lng",[ref]([double]$null))) { continue }

            [pscustomobject]@{
              dataset = "hall"
              name    = $name
              type    = $type
              units   = if($units){[int]$units}else{$null}
              address = $addr
              city    = $city
              state   = $state
              zip     = $zip
              owner   = $owner
              manager = $manager
              manager_email = $email
              rvp     = $rvp
              rpm     = $rpm
              lat     = [double]$lat
              lng     = [double]$lng
            }
          }

          $outDir = "data"
          New-Item -ItemType Directory -Force -Path $outDir | Out-Null
          $outPath = "$outDir/hall_properties.json"
          $out | ConvertTo-Json -Depth 6 | Out-File -FilePath $outPath -Encoding UTF8
          Write-Host "Wrote $outPath with $($out.Count) rows."

      - name: Commit JSON
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: build hall_properties.json"
          file_pattern: data/hall_properties.json
